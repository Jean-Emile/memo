from infinit.beyond.exceptions import *

## ------------------ ##
## Field verification ##
## ------------------ ##
class Validator:

  def __init__(self, object, field):
    self.field = Field(object, field)

class Name(Validator):

  def __call__(self, name):
    import re
    components = name.split('/')
    if object == 'user' and len(components) > 1:
      raise InvalidFormat(self.field.object, self.field.name)
    elif len(components) > 2:
      raise InvalidFormat(self.field.object, self.field.name)
    else:
      name = components[-1]
    if re.compile(${repr(name_regex)}).match(name) is None:
      raise InvalidFormat(self.field.object, self.field.name)

class Email(Validator):

  def __call__(self, email):
    import re
    if re.compile(${repr(email_regex)}).match(email) is None:
      raise InvalidFormat(self.field.object, self.field.name)

#!/usr/bin/env python3

import infinit.beyond.bottle

import unittest
import urllib.parse

from utils import *

from copy import deepcopy

with Beyond() as beyond:

  class Test(unittest.TestCase):

    def test_normal(self):
      user = User()
      user.put(beyond)
      network = Network(name = 'infinit', owner = user)
      network.put(beyond, owner = user)
      beyond.delete('networks/%s' % network['name'],
                    auth = user.private_key)

    def test_push_passport_and_delete(self):
      alice, bob = User(), User()
      alice.put(beyond), bob.put(beyond)
      network = Network(name = 'infinit', owner = alice)
      network.put(beyond)
      passport = Passport(network, bob)
      passport.put(beyond)
      beyond.delete('networks/%s' % network['name'],
                    auth = alice.private_key)

    def test_push_pull_push_pull(self):
      user = User()
      user.put(beyond)
      network = Network(name = 'infinit', owner = user)
      for i in range(0, 10):
        network.put(beyond, owner = user)
        beyond.delete('networks/%s' % network['name'],
                      auth = user.private_key)

    def test_authentication(self):
      user = User()
      user.put(beyond)
      network = Network(name = 'infinit', owner = user)
      network.put(beyond, owner = user)
      throws(lambda: beyond.delete('networks/%s' % network['name']),
             json = False,
             expected = 401)

    def test_deleting_someone_else_network(self):
      alice, bob = User(), User()
      alice.put(beyond), bob.put(beyond)
      network = Network(name = 'infinit', owner = alice)
      network.put(beyond, owner = alice)
      throws(lambda: beyond.delete('networks/%s' % network['name'],
                                   auth = bob.private_key),
             json = False,
             expected = 403)

    def test_deleting_an_unknown_network(self):
      user = User()
      user.put(beyond)
      throws(lambda: beyond.get('networks/%s/unknown' % user['name']),
             json = False,
             expected = 404)
      throws(lambda: beyond.delete('networks/%s/unknown' % user['name'],
                                   auth = user.private_key),
             json = False,
             expected = 404)

  if __name__ == '__main__':
    unittest.main()

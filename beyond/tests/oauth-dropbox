#!/usr/bin/env python3

import infinit.beyond.bottle

import bottle
import unittest
import urllib.parse

from utils import *

class DummyDropbox(bottle.Bottle):

  def __init__(self, host):
    super().__init__()
    self.__host = host
    self.route('/oauth-token', method = 'POST')(self.token)
    self.route('/info')(self.info)

  def token(self):
    assert bottle.request.query['code'] == 'secret_code'
    assert bottle.request.query['grant_type'] == 'authorization_code'
    assert bottle.request.query['client_id'] == 'db_key'
    assert bottle.request.query['client_secret'] == 'db_secret'
    assert bottle.request.query['redirect_uri'] == '%s/oauth/dropbox' % self.__host
    return {
      'access_token': 'secret_token',
    }

  def info(self):
    assert bottle.request.query['access_token'] == 'secret_token'
    return {
      'uid': 'user_uid',
      'display_name': 'user_display-name',
    }

with Beyond() as beyond, DummyDropbox(beyond.host) as db:
  conf = infinit.beyond.bottle.Bottle._Bottle__oauth_services
  form_url = '%s/dropbox-oauth-form' % db.host
  exchange_url = '%s/oauth-token' % db.host
  info_url = '%s/info' % db.host
  conf['dropbox']['form_url'] = form_url
  conf['dropbox']['exchange_url'] = exchange_url
  conf['dropbox']['info_url'] = info_url

  class Test(unittest.TestCase):

    def test_form_redirection(self):
      r = beyond.get('users/user/dropbox-oauth')
      self.assertEqual(r.status_code, 303)
      url = urllib.parse.urlparse(r.headers['Location'])
      print(url)
      self.assertEqual('%s://%s' % (url.scheme, url.netloc), db.host)
      self.assertEqual(url.path, '/dropbox-oauth-form')
      self.assertEqual(url.params, '')
      query = urllib.parse.parse_qs(url.query)
      self.assertEqual(query['state'], ['user'])
      self.assertEqual(query['client_id'], ['db_key'])
      self.assertEqual(query['response_type'], ['code'])
      self.assertEqual(query['redirect_uri'],
                       ['%s/oauth/dropbox' % beyond.host])

    def test_credentials_post(self):
      r = beyond.put('users/%s' % mefyl2['name'], json = mefyl2)
      self.assertEqual(r.status_code, 201)
      r = beyond.get('oauth/dropbox', params = {'code': 'secret_code',
                                                'state': 'mefyl'})
      self.assertEqual(r.status_code, 200)
      self.assertEqual(
        r.json(),
        {
          'uid': 'user_uid',
          'display_name': 'user_display-name',
        })


  if __name__ == '__main__':
    unittest.main()

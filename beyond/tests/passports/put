#!/usr/bin/env python3

import infinit.beyond.bottle

import unittest
import urllib.parse

from utils import *

from copy import deepcopy

with Beyond() as beyond:

  class Test(unittest.TestCase):

    def test_normal(self):
      user = User()
      user.put(beyond)
      network = Network('infinit', owner = user)
      invitee = User()
      invitee.put(beyond)
      network.put(beyond, owner = user)
      passport = Passport(network, invitee)
      passport.put(beyond)
      beyond.get('networks/%s/passports/%s' % (
        network['name'], invitee['name']),
                 auth = invitee.private_key)

    def test_authorisation_put(self):
      user, invitee, evil = User(), User(), User()
      user.put(beyond)
      evil.put(beyond)
      invitee.put(beyond)
      network = Network('infinit', owner = user)
      network.put(beyond, owner = user)
      passport = Passport(network, invitee)
      try:
        passport.put(beyond, owner = evil)
        assert False
      except Exception:
        pass

    def test_authorisation_get(self):
      user = User()
      user.put(beyond)
      network = Network('infinit', owner = user)
      network.put(beyond, owner = user)
      invitee = User()
      invitee.put(beyond)
      passport = Passport(network, invitee)
      passport.put(beyond)
      try:
        beyond.get('networks/%s/passports/%s' % (
          network['name'], invitee['name']))
        assert False
      except Exception:
        pass

  if __name__ == '__main__':
    unittest.main()

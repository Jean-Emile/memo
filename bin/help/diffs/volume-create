volume: create: Usage: _build/macosx64/bin/infinit-volume --create --name VOLUM volume: create: Usage: infinit volume create [OPTIONS]
										Create a volume
Create a volume:
										Options:
Create options:									  -h, --help		    show this help message
  --name arg				Volume name				      --compatibility-version arg  compatibility version to force
  --description arg			Description of volume			  -s, --script		    suppress extraneous human friendly messages and use
  -R [ --create-root ] [=arg(=true)]	Create root directory			  -a, --as arg		    user to run commands as (default: akim)
  -N [ --network ] arg			Underlying network to use		  -n, --name arg	    name of the volume to create
  --push-volume [=arg(=true)]		Push the volume to the Hub		  -N, --network arg	    network to create volume for
  -o [ --output ] arg			File to write the volume to		      --description arg	    volume description (default: null)
					(default: stdout)			  -R, --create-root	    create root directory
  -d [ --default-permissions ] arg	Default permissions (optional: r,rw)	      --push-volume arg	    push the volume to the Hub (default: false)
  -r [ --register-service ] [=arg(=true)]					  -o, --output arg	    file to write the volume to (default: null)
					Register volume in the network		  -d, --default-permissions arg	 default permissions (optional: r,rw) (default:
  --allow-root-creation [=arg(=true)]	Create the filesystem root if not found	  -r, --register-service    register volume in the network
  -m [ --mountpoint ] arg		Where to mount the filesystem		      --allow-root-creation  create the filesystem root if not found
  --readonly [=arg(=true)]		Mount as readonly			  -m, --mountpoint arg	    where to mount the filesystem (default: null)
  --mount-name arg			Name of mounted volume			      --readonly arg	    mount as readonly (default: false)
  --mount-icon arg			Path to an icon for mounted volume	      --mount-name arg	    name of mounted volume (default: null)
  --finder-sidebar [=arg(=true)]	Show volume in Finder sidebar		      --mount-icon arg	    path to an icon for mounted volume (default: null)
  --async [=arg(=true)]			Use asynchronous write operations	      --finder-sidebar	    show volume in Finder sidebar
  -d [ --daemon ] [=arg(=true)]		Run as a background daemon		      --async arg	    use asynchronous write operations (default: false)
  --monitoring [=arg(=true)] (=true)	Enable monitoring (default: true)	  -d, --daemon		    run as a background daemon
  --fuse-option arg			Option to pass directly to FUSE		      --monitoring arg	    enable monitoring (default: true)
  --cache [=arg(=true)]			Enable caching with default values	      --fuse-option arg	    option to pass directly to FUSE (default: [])
  --cache-ram-size arg			Maximum RAM block cache size in bytes	      --cache arg	    enable caching with default values (default: false)
					(default: 64 MB)			      --cache-ram-size arg  maximum RAM block cache size in bytes (default: 64M
  --cache-ram-ttl arg			RAM block cache time-to-live in seconds	      --cache-ram-ttl arg   RAM block cache time-to-live in seconds (default: 5
					(default: 5 minutes)			      --cache-ram-invalidation arg  RAM block cache invalidation time in second
  --cache-ram-invalidation arg		RAM block cache invalidation time in	      --cache-disk-size arg  size of disk cache for immutable data in bytes (de
					seconds (default: 15 seconds)		      --fetch-endpoints arg  fetch endpoints from the Hub (default: false)
  --cache-disk-size arg			Size of disk cache for immutable data	  -f, --fetch arg	    fetch volume from the Hub (default: false)
					in bytes (default: 512 MB)		      --peer arg	    peer address or file with list of peer addresses (h
  --fetch-endpoints [=arg(=true)]	Fetch endpoints from the Hub		      --peers-file arg	    Periodically write list of known peers to given fil
  -f [ --fetch ] [=arg(=true)]		Alias for --fetch-endpoints		      --push-endpoints arg  push endpoints to the Hub (default: false)
  --peer arg				Peer address or file with list of peer	  -p, --push arg	    push volume to the Hub (default: false)
					addresses (host:port)			      --publish arg	    alias for --fetch-endpoints --push-endpoints (defau
  --peers-file arg			Periodically write list of known peers	      --advertise-host arg  advertise extra endpoint using given host (default:
					to given file				      --endpoints-file arg  write node listening endpoints to file (format: hos
  --push-endpoints [=arg(=true)]	Push endpoints to the Hub		      --port-file arg	    write node listening port to file (default: null)
  -p [ --push ] [=arg(=true)]		Alias for --push-endpoints		      --port arg	    outbound port to use (default: null)
					--push-volume				      --listen arg	    specify which IP address to listen on (default: all
  --publish [=arg(=true)]		Alias for --fetch-endpoints		      --fetch-endpoints-interval arg  period for repolling endpoints from the H
					--push-endpoints			  -i, --input arg	    file to read volume from (default: null)
  --advertise-host arg			Advertise extra endpoint using given	      --block-size arg	    volume block size (default: 1048576)
					host
  --endpoints-file arg			Write node listening endpoints to file
					(format: host:port\n)
  --port-file arg			Write node listening port to file
  --port arg				Outbound port to use
  --listen arg				Specify which IP address to listen on
					(default: all)
  --fetch-endpoints-interval arg (=300) Period for repolling endpoints from the
					Hub in seconds (default: 300s)
  -i [ --input ] arg			File to read the commands from
					(default: stdin)
Deprecated options:
  --cache-size arg			Use "--cache-ram-size" instead
  --cache-ttl arg			Use "--cache-ram-ttl" instead
  --cache-invalidation arg		Use "--cache-ram-invalidation" instead
  --disk-cache-size arg			Use "--cache-disk-size" instead

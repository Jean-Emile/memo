#!/usr/bin/env python3

import datetime
import infinit.beyond.gcs
import os
import requests
import subprocess
import sys

gcs_login = '798530033299-s9b7qmrc99trk8uid53giuvus1o74cif@developer.gserviceaccount.com'
gcs_key = '''-----BEGIN PRIVATE KEY-----
MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBALCm3D3cHlKYRygk
vRgesY39WUGeUN/sCBsVaxMuga1bCAZ6fVoh58pQEmeBpkjaVdtB0nz9ZBVoeDtR
PcfafaUW+UFXjRf2rJ3MoJ/J72mccSD08sjVX3Q9U5iydYhjZEx3uwhUcaHG6+Rq
f4xhb/49jfFmDJ/9zCopsiPBJQgfAgMBAAECgYEAqxgByrxOdirdCGmE6D6aM+8E
qwReSnL+atT0zzBFExVPEY9Dp6+dI5soKC4vUvJ9I45+AucdL4ruoG0QTGg3NbjC
XCD88TL2UdSog/xxHAQ37EvnoPwK6v04FZHdm94eXkJMQzpf9pP8EyVEaXZWb8Uw
2MDPGluTWgkUKZitkLECQQDjuLBFwtU9rdDZB3G00P3hMXuvomPPEHRvdpvwbxLG
WX1XNPG1FlBbQhyBgUIVATn9sU28df7kANqhhnEthXY3AkEAxpaoR0rtZzPIt4c4
3PQm+mclxxEUZozrRnO/t6bDc/wGvI7C69wIu4UI8j4zFtRRuC2qCDaTorXibFRb
PKEJWQJAY8eNFUQlg30hwbbNT9kzJPU1qOOSsCwZmK1z7on8xAR6MzfzoNFCLHpv
Wx90ARgkfNCvqyBYqzbklVn/RV7xSQJBAJluCPGb+DPGFIuHU+2STRMl4lAc6BAb
TCOQhk0T8OqJi4LfIcYsqCqJLFJMsBgxTjnoPfg+gm4x7JAZ1KvRF3ECQFcwSrNV
cun1SplfUKZQZywA8ueUU/ZuGj/XXwopPR5LgWW7sgkwdCklQUPjcecWEZFy/ODl
e9FGZj7sEHpPuDE=
-----END PRIVATE KEY-----
'''

tmp = os.environ.get('TMPDIR', '/tmp')

def parse_options():
  import argparse
  # Parse options
  parser = argparse.ArgumentParser(
    description = 'deploy infinit packages')
  parser.add_argument('--version',
                      metavar = 'VERSION',
                      required = True,
                      type = str,
                      help = 'version to deploy')
  return parser.parse_args()

options = parse_options()
version = options.version
url = 'https://debian.infinit.sh/pool/trusty/main/i/infinit'
deb = 'infinit_%s_amd64.deb' % version

deb_path = '%s/%s' % (tmp, deb)
if not os.path.exists(deb_path):
  url = '%s/%s' % (url, deb)
  print('Download %s' % url)
  r = requests.get(url, stream = True)
  if r.status_code != 200:
    raise Exception('error %s dowloading %s' % (r.status_code, url))
  with open(deb_path, 'wb') as f:
    for chunk in r:
      f.write(chunk)

print('Unpack %s' % deb_path)
subprocess.check_call(['dpkg', '-x', deb_path,
                       '%s/infinit-%s' % (tmp, version)])
reported = subprocess.check_output(
  ['%s/infinit-%s/opt/infinit/bin/infinit-volume' % (tmp, version),
   '--version'])
if reported.decode().strip() != version:
  raise Exception('reported version is different: %s' % reported)

basename = 'Infinit-x86_64-linux_debian_oldstable-gcc4-%s' % version
tarball = '%s/%s.tbz' % (tmp, basename)
print('Pack %s' % tarball)
subprocess.check_call([
  'tar', '-cjf', tarball,
  '-C', '%s/infinit-%s/opt' % (tmp, version),
  'infinit', '--transform', 's/^infinit/%s/' % basename,
  '--show-stored-names'])

gcs = infinit.beyond.gcs.GCS(
  bucket_ns = 'sh_infinit',
  login = gcs_login,
  key = bytes(gcs_key, 'UTF-8'))

print('Upload to GCS')
with open(tarball, 'rb') as f:
  gcs.upload(
    'releases', 'linux64/%s.tbz' % basename,
    data = f.read(),
    content_type = 'application/x-bzip-compressed-tar',
    public = True,
  )

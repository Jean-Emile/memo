#!/usr/bin/env python3

from utils import *
import json

# Creating and deleting networks locally.
with Beyond() as beyond, Infinit(beyond = beyond) as bob, \
     Infinit(beyond = beyond) as alice:
  bob.run(['infinit-user', '--create',  'bob'])
  alice.run(['infinit-user', '--create',  'alice'])

  try:
    bob.run(['infinit-network', '--delete', '--name', 'broken', '--as', 'bob'])
    unreachable()
  except Exception as e:
    pass
  bob.run(['infinit-network', '--create', '--name', 'broken', '--as', 'bob'])
  bob.run(['infinit-network', '--delete', '--name', 'broken', '--as', 'bob'])

  bob.run(['infinit-network', '--create', '--name', 'broken', '--as', 'bob'])
  # Specified.
  bob.run(['infinit-network', '--delete', '--name', 'bob/broken', '--as', 'bob'])

  bob.run(['infinit-network', '--create', '--name', 'osef', '--as', 'bob'])
  net = bob.run(['infinit-network', '--export', '--name', 'osef', '--as', 'bob'])
  alice.run(['infinit-network', '--import'],
            input = net)

  try:
    alice.run(['infinit-network', '--delete', '--name', 'osef', '--as', 'alice'])
    unreachable()
  except Exception as e:
    pass
  alice.run(['infinit-network', '--delete', '--name', 'bob/osef', '--as', 'alice'])

# Fetch & list.
with Beyond() as beyond, Infinit(beyond = beyond) as bob, \
     Infinit(beyond = beyond) as alice:

  bob.run(['infinit-user', '--signup', '--name', 'bob', '--email', 'bob@infinit.io'])
  alice.run(['infinit-user', '--signup', '--name', 'alice', '--email', 'alice@infinit.io'])
  bob.run(['infinit-user', '--fetch', '--name', 'alice'])
  alice.run(['infinit-user', '--fetch', '--name', 'bob'])

  # Create.
  l = bob.run(['infinit-network', '--list'])
  assertEq(len(l), 0)
  bob.run(['infinit-network', '--create', '--name', 'a', '--as', 'bob', '--push'])
  try:
    bob.run(['infinit-network', '--push', '--name', 'a'])
    unreachable()
  except Exception as e:
    pass
  l = bob.run(['infinit-network', '--list'])
  assertEq(len(l), 1)
  bob.run(['infinit-network', '--create', '--name', 'b', '--as', 'bob', '--push'])
  l = bob.run(['infinit-network', '--list'])
  assertEq(len(l), 2)

  l = alice.run(['infinit-network', '--list'])
  assertEq(len(l), 0)
  alice.run(['infinit-network', '--fetch', '--name', 'bob/a', '--as', 'alice'])
  l = alice.run(['infinit-network', '--list'])
  assertEq(len(l), 1)
  alice.run(['infinit-network', '--fetch', '--as', 'alice'])
  # Still one, alice hasn't been invited to the 2nd network.
  l = alice.run(['infinit-network', '--list'])
  assertEq(len(l), 1)

# Update network.
with Beyond() as beyond, Infinit(beyond = beyond) as bob, \
     Infinit(beyond = beyond) as alice:
  bob.run(['infinit-user', '--signup',  'bob', '--email', 'bob@infinit.io'])
  alice.run(['infinit-user', '--signup',  'alice', '--email', 'alice@infinit.io'])
  bob.run(['infinit-user', '--fetch', '--name', 'alice'])

  bob.run(['infinit-network', '--create', '--name', 'n', '--as', 'bob', '--kelips', '--push', '--port', '8181'])
  bob.run(['infinit-passport', '--create', '--push', '--network', 'n', '--user', 'alice', '--as', 'bob'])
  alice.run(['infinit-passport', '--fetch', '--as', 'alice'])

  alice.run(['infinit-network', '--fetch', '--name', 'bob/n', '--as', 'alice'])
  alice.run(['infinit-network', '--link', '--name', 'bob/n', '--as', 'alice'])
  e0 = alice.run(['infinit-network', '--export', '--name', 'bob/n', '--as', 'alice'])
  new_version = '9.9.9'
  bob.run(['infinit-network', '--update', '--name', 'n', '--compatibility-version', new_version, '--as', 'bob', '--push'])
  alice.run(['infinit-network', '--fetch', '--name', 'bob/n', '--as', 'alice'])
  e1 = alice.run(['infinit-network', '--export', '--name', 'bob/n', '--as', 'alice'])
  assertNeq(e0['version'], e1['version'])
  assertEq(e1['version'], new_version)
  del e0['version']
  del e1['version']
  assertEq(e0, e1)

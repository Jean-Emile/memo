#!/usr/bin/env python3

import json
import os
import re
import subprocess
import sys

from utils import *

nfail = 0

def deps_darwin(path):
  '''The libs that `path` depends upon.'''

  out = subprocess.check_output(['otool', '-L',  str(path)])
  lines = out.decode('utf-8').strip().split('\n')
  res = [x.replace('\t', '').split(' ')[0]
         for x in lines[1:]]
  print('deps({}) = {}'.format(path, res))
  return res

# The valid dependencies for a darwin lib/executable.
darwin_deps = [
  r'/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation',
  r'/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices',
  r'/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration',
  r'/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation',
  r'/usr/lib/libSystem\.B\.dylib',
  r'/usr/lib/libiconv\.2\.dylib',
  r'@rpath/[^/]*\.dylib',
]
darwin_re = re.compile('|'.join(darwin_deps))
def check_deps_darwin(path):
  for dep in deps_darwin(path):
    if not darwin_re.match(dep):
      print('fail: {} ({})'.format(dep, path), file=sys.stderr)
      global nfail
      nfail += 1

def check_deps(path):
  if sys.platform == 'darwin':
    check_deps_darwin(path)

def check_dir(dir):
  for file in os.listdir(dir):
    if file.endswith('.dylib'):
      path = os.path.join(dir, file)
      check_deps(path)

check_dir(os.path.join(os.environ['BUILD_DIR'], 'bin'))
check_dir(os.path.join(os.environ['BUILD_DIR'], 'lib'))

# exit(1 if nfail else 0)

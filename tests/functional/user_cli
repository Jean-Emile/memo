#!/usr/bin/env python3

from utils import *
import json

# Using hub to retreive a user.
with Beyond() as beyond, TemporaryDirectory() as tmp,  \
     Infinit(beyond = beyond) as bob, Infinit(beyond = beyond) as alice:
  bob.run(['infinit-user', '--signup',
           '--name', 'bob', '--email', 'bob@infinit.io'])
  alice.run(['infinit-user', '--signup', '--full',
             '--name', 'alice', '--email', 'alice@infinit.io',
             '--password', 'loremipsword'])
  try:
    bob.run(['infinit-user', '--export', '--name', 'alice'])
    unreachable()
  except Exception as e:
    pass
  bob.run(['infinit-user', '--fetch', '--name', 'alice'])
  bob.run(['infinit-user', '--export', '--name', 'alice'])

## ----------------- ##
## Login / Push full ##
## ----------------- ##
# Using login.
with Beyond() as beyond, TemporaryDirectory() as tmp,  \
     Infinit(beyond = beyond) as alice, Infinit(beyond = beyond) as alice2:
  alice.run(['infinit-user', '--signup', '--full',
             '--name', 'alice',
             '--email', 'alice@infinit.io',
             '--password', 'loremipsword'])
  alice_json = alice.run(['infinit-user', '--export', '--name', 'alice', '--full'])
  alice2.run(['infinit-user', '--login',
              '--name', 'alice',
              '--password', 'loremipsword'])
  alice2_json = alice2.run(['infinit-user', '--export', '--full',
                            '--name', 'alice'])
  # XXX: Fix missing email.
  del alice_json['email']
  del alice2_json['email']
  assertEq(alice_json, alice2_json)

# Push --full.
with Beyond() as beyond, TemporaryDirectory() as tmp,  \
     Infinit(beyond = beyond) as alice, Infinit(beyond = beyond) as alice2:
  alice.run(['infinit-user', '--create', '--name', 'alice'])
  alice.run(['infinit-user', '--push', '--full',
             '--name', 'alice',
             '--email', 'alice@infinit.io',
             '--password', 'loremipsword'])
  alice_json = alice.run(['infinit-user', '--export', '--name', 'alice', '--full'])
  alice2.run(['infinit-user', '--login',
              '--name', 'alice',
              '--password', 'loremipsword'])
  alice2_json = alice2.run(['infinit-user', '--export', '--full',
                            '--name', 'alice'])
  # XXX: Fix missing email.
  del alice_json['email']
  del alice2_json['email']
  assertEq(alice_json, alice2_json)

# Push without --full.
with Beyond() as beyond, TemporaryDirectory() as tmp, \
     Infinit(beyond = beyond) as alice:
  alice.run(['infinit-user', '--create', '--name', 'alice'])
  alice.run(['infinit-user', '--push',
             '--name', 'alice',
             '--email', 'alice@infinit.io'])
  alice_json = alice.run(['infinit-user', '--export', '--name', 'alice', '--full'])
  try:
    alice.run(['infinit-user', '--login', '--name', 'alice', '--password', 'loremipsword'])
    unreachable()
  except Exception as e:
    assert 'doesn\'t use the hub to login' in e.args[0]

# Read password from stdin (signup).
with Beyond() as beyond, TemporaryDirectory() as tmp,  \
     Infinit(beyond = beyond) as alice, Infinit(beyond = beyond) as alice2:
  alice.run(['infinit-user', '--create', '--name', 'alice'])
  alice.run(['infinit-user', '--push',
             '--full',
             '--name', 'alice',
             '--email', 'alice@infinit.io'],
            input = 'loremipsword'.encode('utf-8'),
            input_as_it_is = True)
  alice2.run(['infinit-user', '--login',
              '--name', 'alice',
              '--password', 'loremipsword'])

# Read password from stdin (login).
with Beyond() as beyond, TemporaryDirectory() as tmp,  \
     Infinit(beyond = beyond) as alice, Infinit(beyond = beyond) as alice2:
  alice.run(['infinit-user', '--create', '--name', 'alice'])
  alice.run(['infinit-user', '--push',
             '--full',
             '--name', 'alice',
             '--email', 'alice@infinit.io',
             '--password', 'loremipsword'])
  alice2.run(['infinit-user', '--login', '--name', 'alice'],
             input = 'loremipsword'.encode('utf-8'),
             input_as_it_is = True)

# Read password from stdin (both).
with Beyond() as beyond, TemporaryDirectory() as tmp,  \
     Infinit(beyond = beyond) as alice, Infinit(beyond = beyond) as alice2:
  alice.run(['infinit-user', '--create', '--name', 'alice'])
  alice.run(['infinit-user', '--push',
             '--full',
             '--name', 'alice',
             '--email', 'alice@infinit.io'],
            input = 'loremipsword'.encode('utf-8'),
            input_as_it_is = True)
  alice2.run(['infinit-user', '--login', '--name', 'alice'],
             input = 'loremipsword'.encode('utf-8'),
             input_as_it_is = True)

# Missing and invalid email.
with Beyond() as beyond, TemporaryDirectory() as tmp,  \
     Infinit(beyond = beyond) as alice, Infinit(beyond = beyond) as alice2:
  try:
    alice.run(['infinit-user', '--signup', '--name', 'alice'])
    unreachable()
  except Exception as e:
    assert '(use --email)' in  e.args[0]
  try:
    alice.run(['infinit-user', '--signup', '--name', 'alice', '--email', 'foo@'])
    unreachable()
  except Exception as e:
    assert 'email address is invalid' in  e.args[0]
  # Create is not atomic, so 'alice' will be created after that.
  try:
    alice.run(['infinit-user', '--create', '--name', 'alice', '--push'])
    unreachable()
  except Exception as e:
    assert '(use --email)' in  e.args[0]

# Password missmatch.
with Beyond() as beyond, TemporaryDirectory() as tmp,  \
     Infinit(beyond = beyond) as alice, Infinit(beyond = beyond) as alice2:
  alice.run(['infinit-user', '--signup', '--full',
             '--name', 'alice',
             '--email', 'alice@infinit.io',
             '--password', 'loremipsword'])
  try:
    alice2.run(['infinit-user', '--login',
                '--name', 'alice',
                '--password', 'not_password'])
    assert False
  except Exception as e:
    assert 'password do not match' in e.args[0]

# Invalid user name.
with Beyond() as beyond, TemporaryDirectory() as tmp,  \
     Infinit(beyond = beyond) as bob, Infinit(beyond = beyond) as alice:
  def create_with_name(name):
    bob.run(['infinit-user', '--create',
               '--name', name, '--email', '%s@infinit.io' % name])

  def create_with_name_throw(name):
    try:
      create_with_name(name)
      assert False
    except Exception as e:
      pass

  create_with_name("bob")
  create_with_name("alice123")
  create_with_name("eve_2")

  create_with_name_throw("Bob")
  create_with_name_throw("acc√©nt")
  create_with_name_throw("char+acter")
  create_with_name_throw("s/ash")

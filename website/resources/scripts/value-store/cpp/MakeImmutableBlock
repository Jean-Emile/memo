// Create an immutable block creation request.
::MakeImmutableBlockRequest make_block;
// Set the payload.
make_block.set_data("some data");
// Create an empty block.
::Block block;
{
  // Create a context.
  grpc::ClientContext ctx;
  // Construct the immutable block and store it in `block`.
  auto status = kv->MakeImmutableBlock(&ctx, make_block, &block);
  if (!status.ok())
    throw std::runtime_error("Cannot make immutable block");
}
// Create a insertion response.
::InsertResponse insertion;
{
  // Create a context.
  grpc::ClientContext ctx;
  // Create an insertion request.
  ::InsertRequest insert;
  // Set the block to the insertion request using the setter.
  //
  // N.B. `mutable_block` is to access to a mutable version of the attribute
  // `block`. It's not correlated with MutableBlock or ImmutableBlock.
  insert.mutable_block()->CopyFrom(block);
  // Actually insert the block.
  auto status = kv->Insert(&ctx, insert, &insertion);
  if (!status.ok())
    throw std::runtime_error("Cannot insert block");
}

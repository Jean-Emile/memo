{
  "infinit": {
    "name": "Infinit",
    "description": "Infinit is a decentralized storage platform that has the particularity to be customized through a set of policies.",
    "properties": {
      "logic": ["file", "object", "block"],
      "interface": ["nbd", "iscsi", "fuse", "dokan", "nfs", "smb", "amazon s3", "gcs", "api", "openstack swift"],
      "model": ["decentralized"],
      "environment": ["controlled", "uncontrolled"],
      "redundancy": ["replication"],
      "fault-tolerance": ["standard"],
      "scalability": ["heterogeneous"],
      "security": ["in transit", "at rest"],
      "pricing": ["free", "license"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Infinit_(storage_platform)"
    }
  },
  "afs": {
    "name": "Andrew File System",
    "description": "Andrew File System is a distributed file system originally developed at Carnegie Mellon University as part of the Andrew Project.",
    "properties": {
      "logic": ["file"],
      "interface": ["afs", "smb"],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": ["partial"],
      "security": ["in transit"],
      "scalability": ["homogeneous"],
      "pricing": ["free"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Andrew_File_System"
    }
  },
  "s3": {
    "name": "Amazon S3",
    "description": "Amazon S3 (Simple Storage Service) is a cloud-based object storage web service. S3 provides availability and durability guarantees along with extreme scalability.",
    "properties": {
      "logic": ["object"],
      "interface": ["api"],
      "model": [],
      "environment": [],
      "redundancy": [],
      "fault-tolerance": [],
      "security": ["in transit"],
      "scalability": [],
      "pricing": ["pay as you go"],
      "open-source": ["no"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Amazon_S3"
    }
  },
  "backblaze": {
    "name": "BackBlaze B2",
    "description": "Backblaze B2 is a cloud-based object storage service that competes against <a href='/documentation/comparison/s3'>Amazon S3</a> by promising the lowest storage cost on the market.",
    "properties": {
      "logic": ["object"],
      "interface": ["amazon s3"],
      "model": [],
      "environment": [],
      "redundancy": [],
      "fault-tolerance": [],
      "security": [],
      "scalability": [],
      "pricing": ["pay as you go"],
      "open-source": ["no"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Backblaze"
    }
  },
  "ceph": {
    "name": "Ceph",
    "description": "Ceph is a storage platform that stores data on a single distributed computer cluster. Ceph's distributed model aims at providing scalability at the exabyte level without single points of failure.",
    "properties": {
      "logic": ["block", "object", "file"],
      "interface": ["iscsi", "openstack swift", "rbd", "fuse"],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication", "erasure codes"],
      "fault-tolerance": ["standard"],
      "security": ["none"],
      "scalability": ["homogeneous"],
      "pricing": ["free", "license"],
      "open-source": ["no"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Ceph_(software)"
    }
  },
  "coda": {
    "name": "Coda",
    "description": "Coda is a distributed file system developed as a research project at Carnegie Mellon University since 1987. It descended directly from an older version of Andrew File System and offers many similar features.",
    "properties": {
      "logic": ["file"],
      "interface": ["coda"],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": ["partial"],
      "security": ["none"],
      "scalability": ["homogeneous"],
      "pricing": ["free"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Coda_(file_system)"
    }
  },
  "glusterfs": {
    "name": "GlusterFS",
    "description": "GlusterFS is a scale-out network-attached storage file system. GlusterFS was developed originally by Gluster, Inc., then by Red Hat, Inc., after their purchase of Gluster in 2011.",
    "properties": {
      "logic": ["file"],
      "interface": ["fuse"],
      "model": ["decentralized"],
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": ["standard"],
      "security": ["in transit"],
      "scalability": ["homogeneous"],
      "pricing": ["free", "license"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/GlusterFS"
    }
  },
  "gcs": {
    "name": "Google Cloud Storage",
    "description": "Google Cloud Storage is a cloud-based object storage web service for storing and accessing data on Google's infrastructure. The service is comparable to <a href='/documentation/comparison/gcs'>Amazon S3</a> online storage service.",
    "properties": {
      "logic": ["object"],
      "interface": ["api"],
      "model": [],
      "environment": [],
      "redundancy": [],
      "fault-tolerance": [],
      "security": ["in transit"],
      "scalability": [],
      "pricing": ["pay as you go"],
      "open-source": ["no"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Google_Storage"
    }
  },
  "hammer": {
    "name": "HAMMER",
    "description": "HAMMER is a high-availability 64-bit distributed file system developed for DragonFly BSD.",
    "properties": {
      "logic": ["file"],
      "interface": ["fuse"],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": ["partial"],
      "security": ["none"],
      "scalability": ["homogeneous"],
      "pricing": ["free"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/HAMMER"
    }
  },
  "hdfs": {
    "name": "HDFS",
    "description": "The Hadoop Distributed File System (HDFS) is a distributed, scalable, and portable file system written in Java for the Hadoop framework. A Hadoop cluster is composed of a single namenode plus a cluster of datanodes, although redundancy options are available for the namenode due to its criticality.",
    "properties": {
      "logic": ["file"],
      "interface": ["fuse"],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": ["partial"],
      "security": ["none"],
      "scalability": ["homogeneous"],
      "pricing": ["free"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Apache_Hadoop#HDFS"
    }
  },
  "hedvig": {
    "name": "Hedvig",
    "description": "Hedvig is a software-defined storage platform for private and hybrid clouds.",
    "properties": {
      "logic": ["file", "object", "block"],
      "interface": ["iscsi", "nfs", "amazon s3", "openstack swift"],
      "model": [],
      "environment": [],
      "redundancy": [],
      "fault-tolerance": [],
      "security": [],
      "scalability": ["heterogeneous"],
      "pricing": ["license"],
      "open-source": ["no"]
    },
    "links": {
    }
  },
  "ipfs": {
    "name": "IPFS",
    "description": "The InterPlanetary File System (IPFS) is a content-addressable peer-to-peer hypermedia distribution protocol. In some ways, IPFS is similar to the Web, but IPFS could be seen as a single BitTorrent swarm, exchanging objects within one Git repository. Note however that IPFS does not focus on providing high-level file system functionalities such as access control, POSIX compliance etc.",
    "properties": {
      "logic": ["file"],
      "interface": ["api"],
      "model": ["decentralized"],
      "environment": ["controlled", "uncontrolled"],
      "redundancy": ["none"],
      "fault-tolerance": ["partial"],
      "security": ["in transit"],
      "scalability": ["heterogeneous"],
      "pricing": ["free"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/InterPlanetary_File_System"
    }
  },
  "leofs": {
    "name": "LeoFS",
    "description": "LeoFS is an unstructured object storage for the Web and a highly available, distributed, eventually-consistent storage system.",
    "properties": {
      "logic": ["object", "file"],
      "interface": ["amazon s3", "api", "nfs"],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": ["standard"],
      "security": ["none"],
      "scalability": ["homogeneous"],
      "pricing": ["free"],
      "open-source": ["yes"]
    },
    "links": {
    }
  },
  "lustre": {
    "name": "Lustre",
    "description": "Lustre is a parallel distributed file system generally used for large-scale cluster computing. Lustre provides high performance file systems for computer clusters ranging in size from small workgroup clusters to large-scale, multi-site clusters.",
    "properties": {
      "logic": ["file"],
      "interface": ["lustre"],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": ["partial"],
      "security": ["none"],
      "scalability": ["homogeneous"],
      "pricing": ["free"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Lustre_(file_system)"
    }
  },
  "minio": {
    "name": "Minio",
    "description": "Minio enables operators to easily deploy their own scalable cloud object storage infrastructure.",
    "properties": {
      "logic": ["object"],
      "interface": ["amazon s3"],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication", "erasure codes"],
      "fault-tolerance": ["standard"],
      "security": ["in transit"],
      "scalability": ["homogeneous"],
      "pricing": ["free"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Minio"
    }
  },
  "moosefs": {
    "name": "MooseFS",
    "description": "MooseFS is a distributed file system developed by Core Technology. MooseFS aims to be fault-tolerant, highly available, highly performing, scalable general-purpose network distributed file system for data centers.",
    "properties": {
      "logic": ["file"],
      "interface": ["fuse"],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": ["standard"],
      "security": ["none"],
      "scalability": ["homogeneous"],
      "pricing": ["free", "license"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Moose_File_System"
    }
  },
  "nfs": {
    "name": "NFS",
    "description": "Network File System (NFS) is a distributed file system protocol originally developed by Sun Microsystems in 1984, allowing a user on a client computer to access files over a computer network much like local storage is accessed.",
    "properties": {
      "logic": ["file"],
      "interface": ["api"],
      "model": ["centralized"],
      "environment": ["controlled"],
      "redundancy": ["none"],
      "fault-tolerance": ["partial"],
      "security": ["none"],
      "scalability": ["none"],
      "pricing": ["free"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Network_File_System"
    }
  },
  "portworx": {
    "name": "Portworx",
    "description": "Portworx is a software-defined storage platform for hosting stateful applications in Linux containers.",
    "properties": {
      "logic": ["block"],
      "interface": ["iscsi"],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": ["partial"],
      "security": ["at rest"],
      "scalability": ["homogeneous"],
      "pricing": ["free", "license"],
      "open-source": ["yes"]
    },
    "links": {
    }
  },
  "storageos": {
    "name": "StorageOS",
    "description": "StorageOS delivers persistent storage for containers, delivering scalable, deterministic storage performance, while enabling secure data mobility for containers to move data between bare metal, virtual machines or cloud storage.",
    "properties": {
      "logic": ["block"],
      "interface": [],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": [],
      "security": [],
      "scalability": [],
      "pricing": ["free", "license"],
      "open-source": ["no"]
    },
    "links": {
    }
  },
  "storj": {
    "name": "Storj",
    "description": "Storj's aim is to become an object storage platform that can’t be censored or monitored, or have downtime. Storj is a platform, cryptocurrency, and suite of decentralized applications that allows users to store data in a secure and decentralized manner. It uses blockchain features like a transaction ledger, public/private key encryption, and cryptographic hash functions for security.",
    "properties": {
      "logic": ["object"],
      "interface": ["api"],
      "model": ["decentralized"],
      "environment": ["uncontrolled"],
      "redundancy": ["erasure codes"],
      "fault-tolerance": ["standard"],
      "security": ["in transit", "at rest"],
      "scalability": ["homogeneous"],
      "pricing": ["pay as you go"],
      "open-source": ["yes"]
    },
    "links": {
    }
  },
  "tahoe-lafs": {
    "name": "Tahoe-LAFS",
    "description": "Tahoe-LAFS is a free and open, secure, decentralized, fault-tolerant, distributed data store and distributed file system. It can be used as an online backup system, or to serve as a file or Web host similar to Freenet, depending on the front-end used to insert and access files in the Tahoe system. Tahoe can also be used in a RAID-like manner to use multiple disks to make a single large reliable/redundant array of independent/inexpensive nodes (RAIN) pool of data storage.",
    "properties": {
      "logic": ["file"],
      "interface": ["fuse"],
      "model": ["decentralized"],
      "environment": ["controlled", "uncontrolled"],
      "redundancy": ["erasure codes"],
      "fault-tolerance": ["standard"],
      "security": ["in transit", "at rest"],
      "scalability": ["homogeneous"],
      "pricing": ["free"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Tahoe-LAFS"
    }
  },
  "xtreemfs": {
    "name": "XtreemFS",
    "description": "XtreemFS is a distributed file system for wide area networks. XtreemFS provides fault tolerance while maintaining POSIX file system semantics. Fault tolerance is achieved by using Paxos-based lease negotiation algorithms and is used to replicate files and metadata.",
    "properties": {
      "logic": ["file"],
      "interface": ["fuse"],
      "model": ["distributed"],
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": ["standard"],
      "security": ["in transit"],
      "scalability": ["homogeneous"],
      "pricing": ["free"],
      "open-source": ["yes"]
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/XtreemFS"
    }
  }
}

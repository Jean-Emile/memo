{
  "infinit": {
    "name": "Infinit",
    "description": "Infinit is a peer-to-peer file system that allows for the creation of secure, reliable and scalable storage infrastructure by aggregating both on-premise and cloud resources.",
    "properties": {
      "logics": ["file", "object", "block"],
      "interface": "?",
      "model": "decentralized",
      "environment": ["controlled", "worldwide"],
      "redundancy": ["replication"],
      "fault-tolerance": "Byzantine",
      "scalability": "heterogeneous",
      "security": ["in-transit", "at-rest"],
      "interoperability": "Applications (Windows, MacOS X, Linux, iOS, Android)",
      "pricing": "freemium",
      "consistency": "strong",
      "opensource": "yes"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Infinit_(storage_platform)"
    },
    "similar_to": ["tahoe-lafs", "glusterfs"]
  },
  "afs": {
    "name": "Andrew File System",
    "description": "Andrew File System is a distributed file system originally developed at Carnegie Mellon University as part of the Andrew Project.",
    "properties": {
      "logics": ["file"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": "replication (mirroring)",
      "fault-tolerance": "standard",
      "security": ["in-transit"],
      "scalability": "homogeneous",
      "interoperability": "Applications (Windows, MacOS X, Linux)",
      "pricing": "free",
      "consistency": "eventual",
      "opensource": "yes"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Andrew_File_System"
    },
    "similar_to": ["nfs"]
  },
  "aws-s3": {
    "name": "AWS S3",
    "description": "Amazon S3 (Simple Storage Service) is a cloud-based object storage web service. S3 provides availability and durability guarantees along with extreme scalability.",
    "properties": {
      "logics": ["object"],
      "interface": "API",
      "model": "Unknown (proprietary)",
      "environment": "",
      "redundancy": "Unknown (proprietary)",
      "fault-tolerance": "Unknown (proprietary)",
      "security": ["in-transit"],
      "scalability": "",
      "interoperability": "protocols",
      "pricing": "pay-as-you-go",
      "consistency": "eventual",
      "opensource": "no"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Amazon_S3"
    },
    "similar_to": ["gcs", "backblaze"]
  },
  "backblaze": {
    "name": "BackBlaze B2",
    "description": "Backblaze B2 is a cloud-based object storage service that competes against <a href='/documentation/comparison/aws-s3'>Amazon S3</a> by promising the lowest storage cost on the market.",
    "properties": {
      "logics": ["object"],
      "interface": "API",
      "model": "Unknown (proprietary)",
      "environment": "",
      "redundancy": "Unknown (proprietary)",
      "fault-tolerance": "Unknown (proprietary)",
      "security": ["in-transit"],
      "scalability": "",
      "interoperability": "protocols",
      "pricing": "pay-as-you-go",
      "consistency": "eventual",
      "opensource": "no"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Backblaze"
    },
    "similar_to": ["aws-s3", "gcs"]
  },
  "ceph": {
    "name": "Ceph",
    "description": "Ceph is an object storage platform that stores data on a single distributed computer cluster. Ceph's distributed model aims at providing scalability at the exabyte level without single points of failure.",
    "properties": {
      "logics": ["object"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": [["replication"], "erasure-codes"],
      "fault-tolerance": "standard",
      "security": "None",
      "scalability": "homogeneous",
      "interoperability": "protocols",
      "pricing": "free",
      "consistency": "strong",
      "opensource": "no"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Ceph_(software)"
    }
  },
  "coda": {
    "name": "Coda",
    "description": "Coda is a distributed file system developed as a research project at Carnegie Mellon University since 1987. It descended directly from an older version of Andrew File System and offers many similar features.",
    "properties": {
      "logics": ["file"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": "standard",
      "security": "None",
      "scalability": "homogeneous",
      "interoperability": "protocols",
      "pricing": "license",
      "consistency": "eventual",
      "opensource": "no"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Coda_(file_system)"
    },
    "similar_to": ["hammer", "moosefs", "xtreemfs", "lustre", "hdfs", "nfs"]
  },
  "convergeio": {
    "name": "ConvergeIO",
    "description": "ConvergeIO is a software-defined storage platform built for containers and microservices.",
    "properties": {
      "logics": ["block"],
      "interface": "?",
      "model": "unknown",
      "environment": ["controlled"],
      "redundancy": "unknown",
      "fault-tolerance": "unknown",
      "security": "unknown",
      "scalability": "homogeneous",
      "interoperability": "protocols",
      "pricing": "license",
      "consistency": "unknown",
      "opensource": "no"
    },
    "links": {
      "wikipedia": ""
    },
    "similar_to": ["hedvig", "portworx", "storageos"]
  },
  "glusterfs": {
    "name": "GlusterFS",
    "description": "GlusterFS is a scale-out network-attached storage file system. GlusterFS was developed originally by Gluster, Inc., then by Red Hat, Inc., after their purchase of Gluster in 2011.",
    "properties": {
      "logics": ["file"],
      "interface": "?",
      "model": "decentralized",
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": "standard",
      "security": ["in-transit"],
      "scalability": "homogeneous",
      "interoperability": "Applications (MacOS X, Linux, NetBSD)",
      "pricing": "free",
      "consistency": "eventual",
      "opensource": "yes"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/GlusterFS"
    },
    "similar_to": ["infinit", "tahoe-lafs"]
  },
  "gcs": {
    "name": "Google Cloud Storage",
    "description": "Google Cloud Storage is a cloud-based object storage web service for storing and accessing data on Google's infrastructure. The service is comparable to <a href='/documentation/comparison/gcs'>Amazon S3</a> online storage service.",
    "properties": {
      "logics": ["object"],
      "interface": "API",
      "model": "Unknown (proprietary)",
      "environment": "",
      "redundancy": "Unknown (proprietary)",
      "fault-tolerance": "Unknown (proprietary)",
      "security": ["in-transit"],
      "scalability": "",
      "interoperability": "protocols",
      "pricing": "pay-as-you-go",
      "consistency": "eventual",
      "opensource": "no"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Google_Storage"
    },
    "similar_to": ["aws-s3", "backblaze"]
  },
  "hammer": {
    "name": "HAMMER",
    "description": "HAMMER is a high-availability 64-bit distributed file system developed for DragonFly BSD.",
    "properties": {
      "logics": ["file"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": "replication (mirroring)",
      "fault-tolerance": "standard",
      "security": "None",
      "scalability": "homogeneous",
      "interoperability": "Applications (Linux, *BSD)",
      "pricing": "free",
      "consistency": "eventual",
      "opensource": "no"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/HAMMER"
    },
    "similar_to": ["coda", "moosefs", "xtreemfs", "lustre", "hdfs", "nfs"]
  },
  "hdfs": {
    "name": "HDFS",
    "description": "The Hadoop distributed File system (HDFS) is a distributed, scalable, and portable file-system written in Java for the Hadoop framework. A Hadoop cluster is composed of a single namenode plus a cluster of datanodes, although redundancy options are available for the namenode due to its criticality.",
    "properties": {
      "logics": ["file"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": "standard",
      "security": "None",
      "scalability": "homogeneous",
      "interoperability": "protocols",
      "pricing": "free",
      "consistency": "eventual",
      "opensource": "yes"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Apache_Hadoop#HDFS"
    },
    "similar_to": ["coda", "hammer", "moosefs", "xtreemfs", "lustre", "nfs"]
  },
  "hedvig": {
    "name": "Hedvig",
    "description": "Hedvig (formerly Quexascale) is a software-defined storage platform.",
    "properties": {
      "logics": ["file", "object", "block"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": "unknown",
      "fault-tolerance": "unknown",
      "security": "unknown",
      "scalability": "heterogeneous",
      "interoperability": "protocols",
      "pricing": "License",
      "consistency": "strong",
      "opensource": "no"
    },
    "links": {
      "wikipedia": ""
    },
    "similar_to": ["portworx"]
  },
  "ipfs": {
    "name": "IPFS",
    "description": "The InterPlanetary File System (IPFS) is a content-addressable peer-to-peer hypermedia distribution protocol. In some ways, IPFS is similar to the Web, but IPFS could be seen as a single BitTorrent swarm, exchanging objects within one Git repository. Note however that IPFS does not focus on providing high-level file system functionalities such as access control, POSIX compliance etc.",
    "properties": {
      "logics": ["object"],
      "interface": "?",
      "model": "decentralized",
      "environment": ["controlled", "worldwide"],
      "redundancy": "None",
      "fault-tolerance": "Partial",
      "security": ["in-transit"],
      "scalability": "homogeneous",
      "interoperability": "protocols",
      "pricing": "free",
      "consistency": "eventual",
      "opensource": "no"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/InterPlanetary_File_System"
    }
  },
  "leofs": {
    "name": "LeoFS",
    "description": "LeoFS is an unstructured Object Storage for the Web and a highly available, distributed, eventually consistent storage system.",
    "properties": {
      "logics": ["object"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": "standard",
      "security": ["in-transit"],
      "scalability": "heterogeneous",
      "interoperability": "?",
      "pricing": "free",
      "consistency": "eventual",
      "opensource": "yes"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/GlusterFS"
    },
    "similar_to": ["infinit", "tahoe-lafs"]
  },
  "lustre": {
    "name": "Lustre",
    "description": "Lustre is a parallel distributed file system generally used for large-scale cluster computing. Lustre provides high performance file systems for computer clusters ranging in size from small workgroup clusters to large-scale, multi-site clusters.",
    "properties": {
      "logics": ["file"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": "None",
      "fault-tolerance": "Partial",
      "security": "none",
      "scalability": "homogeneous",
      "interoperability": "protocols",
      "pricing": "free",
      "consistency": "eventual",
      "opensource": "yes"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Lustre_(file_system)"
    },
    "similar_to": ["coda", "hammer", "moosefs", "xtreemfs", "hdfs", "nfs"]
  },
  "moosefs": {
    "name": "MooseFS",
    "description": "MooseFS is a distributed file system developed by Core Technology. MooseFS aims to be fault-tolerant, highly available, highly performing, scalable general-purpose network distributed file system for data centers.",
    "properties": {
      "logics": ["file"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": "standard",
      "security": "None",
      "scalability": "homogeneous",
      "interoperability": "protocols",
      "pricing": "free",
      "consistency": "eventual",
      "opensource": "yes"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Moose_File_System"
    },
    "similar_to": ["coda", "hammer", "xtreemfs", "lustre", "hdfs", "nfs"]
  },
  "nfs": {
    "name": "NFS",
    "description": "Network File System (NFS) is a distributed file system protocol originally developed by Sun Microsystems in 1984, allowing a user on a client computer to access files over a computer network much like local storage is accessed.",
    "properties": {
      "logics": ["file"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": "None",
      "fault-tolerance": "Partial",
      "security": "None",
      "scalability": "homogeneous",
      "interoperability": "protocols",
      "pricing": "free",
      "consistency": "eventual",
      "opensource": "yes"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Network_File_System"
    },
    "similar_to": ["coda", "hammer", "moosefs", "xtreemfs", "lustre", "hdfs"]
  },
  "portworx": {
    "name": "Portworx",
    "description": "Portworx is a software-defined storage platform for hosting stateful applications in Linux containers.",
    "properties": {
      "logics": ["block"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": "unknown",
      "security": "none",
      "scalability": "homogeneous",
      "interoperability": "protocols",
      "pricing": "freemium",
      "consistency": "eventual",
      "opensource": "no"
    },
    "links": {
      "wikipedia": ""
    },
    "similar_to": ["hedvig", "storageos", "convergeio"]
  },
  "storageos": {
    "name": "StorageOS",
    "description": "StorageOS delivers persistent storage for containers, delivering scalable, deterministic storage performance, while enabling secure data mobility for containers to move data between bare metal, virtual machines or cloud storage.",
    "properties": {
      "logics": ["block"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": "unknown",
      "security": ["in-transit", "at-rest"],
      "scalability": "heterogeneous",
      "interoperability": "protocols",
      "pricing": "freemium",
      "consistency": "eventual",
      "opensource": "no"
    },
    "links": {
      "wikipedia": ""
    },
    "similar_to": ["hedvig", "portworx", "convergeio"]
  },
  "storj": {
    "name": "Storj",
    "description": "Storj's aim is to become an object storage platform that can’t be censored or monitored, or have downtime. Storj is a platform, cryptocurrency, and suite of decentralized applications that allows users to store data in a secure and decentralized manner. It uses blockchain features like a transaction ledger, public/private key encryption, and cryptographic hash functions for security.",
    "properties": {
      "logics": ["object"],
      "interface": "?",
      "model": "decentralized",
      "environment": ["worldwide"],
      "redundancy": ["erasure-codes"],
      "fault-tolerance": "Byzantine",
      "security": ["in-transit", "at-rest"],
      "scalability": "homogeneous",
      "interoperability": "Applications",
      "pricing": "pay-as-you-go",
      "consistency": "eventual",
      "opensource": "no"
    }
  },
  "tahoe-lafs": {
    "name": "Tahoe-LAFS",
    "description": "Tahoe-LAFS is a free and open, secure, decentralized, fault-tolerant, distributed data store and distributed file system. It can be used as an online backup system, or to serve as a file or Web host similar to Freenet, depending on the front-end used to insert and access files in the Tahoe system. Tahoe can also be used in a RAID-like manner to use multiple disks to make a single large reliable/redundant array of independent/inexpensive nodes (RAIN) pool of data storage.",
    "properties": {
      "logics": ["file"],
      "interface": "?",
      "model": "decentralized",
      "environment": ["controlled", "worldwide"],
      "redundancy": ["erasure-codes"],
      "fault-tolerance": "Byzantine",
      "security": ["in-transit", "at-rest"],
      "scalability": "homogeneous",
      "interoperability": "Applications (Linux, NetBSD)",
      "pricing": "free",
      "consistency": "eventual",
      "opensource": "yes"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/Tahoe-LAFS"
    },
    "similar_to": ["glusterfs", "infinit"]
  },
  "xtreemfs": {
    "name": "XtreemFS",
    "description": "XtreemFS is a distributed file system for wide area networks. XtreemFS provides fault tolerance while maintaining POSIX file system semantics. Fault tolerance is achieved by using Paxos-based lease negotiation algorithms and is used to replicate files and metadata.",
    "properties": {
      "logics": ["file"],
      "interface": "?",
      "model": "distributed",
      "environment": ["controlled"],
      "redundancy": ["replication"],
      "fault-tolerance": "standard",
      "security": ["in-transit"],
      "scalability": "homogeneous",
      "interoperability": "Applications (Windows, MacOS X, Linux)",
      "pricing": "free",
      "consistency": "eventual",
      "opensource": "yes"
    },
    "links": {
      "wikipedia": "https://en.wikipedia.org/wiki/XtreemFS"
    },
    "similar_to": ["coda", "hammer", "moosefs", "lustre", "hdfs", "nfs"]
  }
}

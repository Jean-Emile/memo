import drake
import drake.cxx
import drake.debian
import drake.markdown
import sys

from itertools import chain
import functools

build = None
check = None
install = None
tests = None

with open(str(drake.path_source('../elle/drake-utils.py')), 'r') as f:
  exec(f.read(), globals(), globals())

def configure(
    python,
    git,
    bottle,
    sendwithus,
    PatchAndInstall,
    prefix = drake.Path('/usr'),
):

  global build, check, install, tests

  class PythonCopy(drake.Copy):

    def execute(self):
      if not super().execute():
        return False
      script = ';'.join([
        'import py_compile',
        'res = py_compile.compile(file = %r, dfile = %r)',
        'exit(1 if res is None else 0)',
      ]) % (str(self.target().path()), str(self.source.path()))
      self.cmd(
        'Check syntax of %s' % self.target(),
        ['%s/bin/python%s' % (python.prefix, python.version),
         '-c', script],
        throw = True)
      return True

  def copy_python(*args, **kwargs):
    return drake.copy(builder = PythonCopy, *args, **kwargs)

  ## ----- ##
  ## Build ##
  ## ----- ##

  sources = drake.nodes(
    'src/__init__.py',
    'src/__main__.py',
    'src/tarball_version.py',
    'src/utils.py',
    'src/wsgi.py',
  )

  version = drake.node('src/version.py')
  if git is None:
    git = drake.git.Git()
  PythonVersionGenerator(version, git)
  sources.append(version)

  dependencies = drake.nodes(
    'src/httpagentparser.py',
  )

  markdown = drake.nodes(
    'templates/pages/docs/src/markdown/filesystem.md',
    'templates/pages/docs/src/markdown/gcs.md',
    'templates/pages/docs/src/markdown/get_started/linux_apt_install.md',
    'templates/pages/docs/src/markdown/get_started/linux_tarball_install.md',
    'templates/pages/docs/src/markdown/get_started/linux_fuse_install.md',
    'templates/pages/docs/src/markdown/get_started/mac_homebrew_install.md',
    'templates/pages/docs/src/markdown/get_started/mac_tarball_install.md',
    'templates/pages/docs/src/markdown/get_started/mac_fuse_install.md',
    'templates/pages/docs/src/markdown/reference.md',
    'templates/pages/docs/src/markdown/s3.md',
    'templates/pages/docs/src/markdown/upgrading.md',
    'templates/pages/docs/src/markdown/environment_variables.md',
    'templates/pages/docs/src/markdown/best_practices.md',
    'templates/pages/docs/src/markdown/technology.md',
  )
  changelog = drake.node(
    'ChangeLog.html',
  )
  drake.markdown.Renderer(
    source = drake.Node('../ChangeLog'),
    target = changelog,
  )

  changelog_drive = drake.node(
    'templates/pages/drive/ChangeLog.html',
  )
  drake.markdown.Renderer(
    source = drake.Node('templates/pages/drive/ChangeLog'),
    target = changelog_drive,
  )

  def copy_generated_pages(nodes):
    return drake.copy(
      nodes,
      'templates/pages/docs/generated',
      strip_prefix = True,
    )

  generated = copy_generated_pages(
    drake.nodes(*[m.name_relative.with_extension('html') for m in markdown])
  ) + copy_generated_pages([changelog])

  templates = drake.nodes(
    'templates/base.html',

    'templates/pages/404.html',
    'templates/pages/about.html',
    'templates/pages/contact.html',
    'templates/pages/download.html',
    'templates/pages/faq.html',
    'templates/pages/home.html',
    'templates/pages/legal.html',
    'templates/pages/opensource.html',
    'templates/pages/pricing.html',
    'templates/pages/solutions.html',
    'templates/pages/update.html',

    'templates/pages/docs/changelog.html',
    'templates/pages/docs/comparison.html',
    'templates/pages/docs/deployments.html',
    'templates/pages/docs/filesystem.html',
    'templates/pages/docs/gcs.html',
    'templates/pages/docs/menu.html',
    'templates/pages/docs/overview.html',
    'templates/pages/docs/reference.html',
    'templates/pages/docs/roadmap.html',
    'templates/pages/docs/s3.html',
    'templates/pages/docs/status.html',
    'templates/pages/docs/upgrading.html',
    'templates/pages/docs/environment_variables.html',
    'templates/pages/docs/best_practices.html',
    'templates/pages/docs/technology.html',

    'templates/pages/docs/get_started.html',

    'templates/pages/drive/drive.html',
    'templates/pages/drive/ChangeLog.html',

    'templates/pages/press/investors.html',
    'templates/pages/press/pr_storage.html',
    'templates/pages/press/pr_tech.html',
    'templates/pages/press/resources.html',

    'templates/pages/users/confirm_email.html',
  ) + generated

  resources = drake.nodes(
    'resources/robots.txt',
    'resources/sitemap.xml',

    'resources/images/favicon@2x.png',
    'resources/images/logo.png',
    'resources/images/logo@2x.png',
    'resources/images/logotype.png',
    'resources/images/bg-worldmap.png',
    'resources/images/bg-worldmap@2x.png',
    'resources/images/home-filesystem-api.png',
    'resources/images/home-filesystem-api@2x.png',
    'resources/images/home-personal-cloud.png',
    'resources/images/home-personal-cloud@2x.png',
    'resources/images/schema-infrastructure.png',
    'resources/images/schema-infrastructure@2x.png',
    'resources/images/schema-global.png',
    'resources/images/schema-global@2x.png',
    'resources/images/schema-global2.png',
    'resources/images/schema-global2@2x.png',
    'resources/images/schema-global-dropbox.png',
    'resources/images/schema-global-dropbox@2x.png',
    'resources/images/schema-centralized.png',
    'resources/images/schema-centralized@2x.png',
    'resources/images/schema-distributed.png',
    'resources/images/schema-distributed@2x.png',
    'resources/images/schema-decentralized.png',
    'resources/images/schema-decentralized@2x.png',
    'resources/images/schema-decentralized-s3.png',
    'resources/images/schema-decentralized-s3@2x.png',
    'resources/images/schema-technology-infinit.png',
    'resources/images/schema-technology-infinit@2x.png',
    'resources/images/schema-technology-dht-overlay.png',
    'resources/images/schema-technology-dht-overlay@2x.png',
    'resources/images/desktop-client.png',
    'resources/images/desktop-client@2x.png',
    'resources/images/schema-file-system.png',
    'resources/images/schema-file-system@2x.png',
    'resources/images/schema-dht.png',
    'resources/images/schema-dht@2x.png',
    'resources/images/custom-branded-apps.png',
    'resources/images/custom-branded-apps@2x.png',
    'resources/images/infinit-cloud-solutions.png',
    'resources/images/infinit-cloud-solutions@2x.png',
    'resources/images/branded-apps.png',
    'resources/images/branded-apps@2x.png',
    'resources/images/terminal-mini.png',
    'resources/images/terminal-mini@2x.png',
    'resources/images/terminal-home.png',
    'resources/images/terminal-home@2x.png',
    'resources/images/branded-apps.png',
    'resources/images/branded-apps@2x.png',
    'resources/images/desktop-client-mini.png',
    'resources/images/desktop-client-mini@2x.png',
    'resources/images/virtual-disk-mac.png',
    'resources/images/virtual-disk-mac@2x.png',
    'resources/images/schema-nfs-like.png',
    'resources/images/schema-nfs-like@2x.png',
    'resources/images/schema-two-clients.png',
    'resources/images/schema-two-clients@2x.png',
    'resources/images/infinit-sh.png',
    'resources/images/infinit-sh@2x.png',
    'resources/images/schema-chord.png',
    'resources/images/schema-chord@2x.png',
    'resources/images/schema-dhash.png',
    'resources/images/schema-dhash@2x.png',
    'resources/images/schema-encryption.png',
    'resources/images/schema-encryption@2x.png',
    'resources/images/schema-deployment-one-server.png',
    'resources/images/schema-deployment-one-server@2x.png',
    'resources/images/schema-deployment-multi-servers.png',
    'resources/images/schema-deployment-multi-servers@2x.png',
    'resources/images/schema-cover.png',
    'resources/images/terminal.png',
    'resources/images/encryption-fs.png',
    'resources/images/encryption-fs@2x.png',
    'resources/images/mesos.png',
    'resources/images/mesos@2x.png',

    'resources/images/docs/gcs/create-bucket.png',
    'resources/images/docs/gcs/oauth-permissions.png',

    'resources/images/docs/s3/attach-policy.png',
    'resources/images/docs/s3/create-bucket.png',
    'resources/images/docs/s3/create-policy.png',
    'resources/images/docs/s3/create-user.png',

    'resources/images/bg/grey.png',
    'resources/images/bg/grey@2x.png',
    'resources/images/bg/dots.png',
    'resources/images/bg/dots@2x.png',
    'resources/images/bg/grey@2x.gif',

    'resources/images/logos/360capitalpartners.png',
    'resources/images/logos/360capitalpartners@2x.png',
    'resources/images/logos/alvencapital.png',
    'resources/images/logos/alvencapital@2x.png',
    'resources/images/logos/aliveideas.png',
    'resources/images/logos/aliveideas@2x.png',
    'resources/images/logos/techstars.png',
    'resources/images/logos/techstars@2x.png',
    'resources/images/logos/slack.png',
    'resources/images/logos/slack@2x.png',
    'resources/images/logos/dropbox-logotype.png',
    'resources/images/logos/dropbox-logotype@2x.png',
    'resources/images/logos/egnyte.png',
    'resources/images/logos/egnyte@2x.png',
    'resources/images/logos/aerofs.png',
    'resources/images/logos/aerofs@2x.png',
    'resources/images/logos/slack-big.png',
    'resources/images/logos/slack-big@2x.png',
    'resources/images/logos/google-drive-big.png',
    'resources/images/logos/google-drive-big@2x.png',
    'resources/images/logos/osxfuse.png',
    'resources/images/logos/osxfuse@2x.png',
    'resources/images/logos/infinit.png',
    'resources/images/logos/infinit@2x.png',
    'resources/images/logos/techcrunch.png',
    'resources/images/logos/techcrunch@2x.png',
    'resources/images/logos/siliconangle.png',
    'resources/images/logos/siliconangle@2x.png',
    'resources/images/logos/infoworld.png',
    'resources/images/logos/infoworld@2x.png',
    'resources/images/logos/glusterfs.png',
    'resources/images/logos/glusterfs@2x.png',
    'resources/images/logos/aws-s3.png',
    'resources/images/logos/aws-s3@2x.png',
    'resources/images/logos/tahoe-lafs.png',
    'resources/images/logos/tahoe-lafs@2x.png',
    'resources/images/logos/bsync.png',
    'resources/images/logos/bsync@2x.png',
    'resources/images/logos/sugarsync.png',
    'resources/images/logos/sugarsync@2x.png',
    'resources/images/logos/storj.png',
    'resources/images/logos/storj@2x.png',
    'resources/images/logos/pydio.png',
    'resources/images/logos/pydio@2x.png',
    'resources/images/logos/bitcasa.png',
    'resources/images/logos/bitcasa@2x.png',
    'resources/images/logos/amazon-cloud-drive.png',
    'resources/images/logos/amazon-cloud-drive@2x.png',
    'resources/images/logos/backblaze.png',
    'resources/images/logos/backblaze@2x.png',
    'resources/images/logos/box.png',
    'resources/images/logos/box@2x.png',
    'resources/images/logos/ceph.png',
    'resources/images/logos/ceph@2x.png',
    'resources/images/logos/coda.png',
    'resources/images/logos/coda@2x.png',
    'resources/images/logos/dropbox.png',
    'resources/images/logos/dropbox@2x.png',
    'resources/images/logos/gcs.png',
    'resources/images/logos/gcs@2x.png',
    'resources/images/logos/hammer.png',
    'resources/images/logos/hammer@2x.png',
    'resources/images/logos/hdfs.png',
    'resources/images/logos/hdfs@2x.png',
    'resources/images/logos/icloud.png',
    'resources/images/logos/icloud@2x.png',
    'resources/images/logos/ipfs.png',
    'resources/images/logos/ipfs@2x.png',
    'resources/images/logos/lustre.png',
    'resources/images/logos/lustre@2x.png',
    'resources/images/logos/moosefs.png',
    'resources/images/logos/moosefs@2x.png',
    'resources/images/logos/nfs.png',
    'resources/images/logos/nfs@2x.png',
    'resources/images/logos/owncloud.png',
    'resources/images/logos/owncloud@2x.png',
    'resources/images/logos/wuala.png',
    'resources/images/logos/wuala@2x.png',
    'resources/images/logos/xtreemfs.png',
    'resources/images/logos/xtreemfs@2x.png',
    'resources/images/logos/docker.png',
    'resources/images/logos/docker@2x.png',
    'resources/images/logos/mesosphere.png',
    'resources/images/logos/mesosphere@2x.png',
    'resources/images/logos/coreos.png',
    'resources/images/logos/coreos@2x.png',
    'resources/images/logos/kubernetes.png',
    'resources/images/logos/kubernetes@2x.png',
    'resources/images/logos/openstack.png',
    'resources/images/logos/openstack@2x.png',
    'resources/images/logos/docker-big.png',
    'resources/images/logos/docker-big@2x.png',
    'resources/images/logos/meetup.png',
    'resources/images/logos/meetup@2x.png',
    'resources/images/logos/twitter-infinit.png',
    'resources/images/logos/twitter-infinit@2x.png',

    'resources/scripts/get-started.sh',
    'resources/scripts/deployments/centralized.sh',
    'resources/scripts/deployments/distributed.sh',
    'resources/scripts/deployments/decentralized.sh',

    'resources/fonts/icons.eot',
    'resources/fonts/icons.svg',
    'resources/fonts/icons.ttf',
    'resources/fonts/icons.woff',

    'resources/json/comparisons.json',

    'resources/css/normalize.css',
    'resources/css/main.min.css',

    'resources/js/instantsearch.min.js',
    'resources/js/scripts.min.js',
  )

  resources_icons = drake.nodes(
    'resources/images/icons/storage.png',
    'resources/images/icons/storage@2x.png',
    'resources/images/icons/folder.png',
    'resources/images/icons/folder@2x.png',
    'resources/images/icons/network.png',
    'resources/images/icons/network@2x.png',
    'resources/images/icons/security.png',
    'resources/images/icons/security@2x.png',
    'resources/images/icons/scalable.png',
    'resources/images/icons/scalable@2x.png',
    'resources/images/icons/scalability.png',
    'resources/images/icons/scalability@2x.png',
    'resources/images/icons/fault_tolerance.png',
    'resources/images/icons/fault_tolerance@2x.png',
    'resources/images/icons/idea.png',
    'resources/images/icons/idea@2x.png',
    'resources/images/icons/arrow-right.png',
    'resources/images/icons/arrow-right@2x.png',
    'resources/images/icons/platforms.png',
    'resources/images/icons/platforms@2x.png',
    'resources/images/icons/rocket.png',
    'resources/images/icons/rocket@2x.png',
    'resources/images/icons/globe.png',
    'resources/images/icons/globe@2x.png',
    'resources/images/icons/code.png',
    'resources/images/icons/code@2x.png',
    'resources/images/icons/startup.png',
    'resources/images/icons/startup@2x.png',
    'resources/images/icons/business.png',
    'resources/images/icons/business@2x.png',
    'resources/images/icons/enterprise.png',
    'resources/images/icons/enterprise@2x.png',
    'resources/images/icons/infinit-cloud-api.png',
    'resources/images/icons/infinit-cloud-api@2x.png',
    'resources/images/icons/infinit-cloud-drive.png',
    'resources/images/icons/infinit-cloud-drive@2x.png',
    'resources/images/icons/infinit-cloud-apps.png',
    'resources/images/icons/infinit-cloud-apps@2x.png',
    'resources/images/icons/infinit-cli.png',
    'resources/images/icons/infinit-cli@2x.png',
    'resources/images/icons/globe-white.png',
    'resources/images/icons/globe-white@2x.png',
    'resources/images/icons/heart.png',
    'resources/images/icons/heart@2x.png',
    'resources/images/icons/cash.png',
    'resources/images/icons/cash@2x.png',
    'resources/images/icons/osxfuse.png',
    'resources/images/icons/osxfuse@2x.png',
    'resources/images/icons/control.png',
    'resources/images/icons/control@2x.png',
    'resources/images/icons/keyboard.png',
    'resources/images/icons/keyboard@2x.png',
    'resources/images/icons/bracket-right.png',
    'resources/images/icons/bracket-right@2x.png',
    'resources/images/icons/bracket-down.png',
    'resources/images/icons/bracket-down@2x.png',
    'resources/images/icons/arrow-down.png',
    'resources/images/icons/email-confirmed.png',
    'resources/images/icons/email-confirmed@2x.png',
    'resources/images/icons/email-unconfirmed.png',
    'resources/images/icons/email-unconfirmed@2x.png',
    'resources/images/icons/search.png',
    'resources/images/icons/search@2x.png',
    'resources/images/icons/delete.png',
    'resources/images/icons/comparison.png',
    'resources/images/icons/comparison@2x.png',
    'resources/images/icons/idea-clean.png',
    'resources/images/icons/idea-clean@2x.png',
    'resources/images/icons/add.png',
    'resources/images/icons/add@2x.png',
    'resources/images/icons/remove.png',
    'resources/images/icons/remove@2x.png',
    'resources/images/icons/fire.png',
    'resources/images/icons/fire@2x.png',
    'resources/images/icons/cli.png',
    'resources/images/icons/cli@2x.png',
    'resources/images/icons/lock.png',
    'resources/images/icons/lock@2x.png',
    'resources/images/icons/caret-down.png',
    'resources/images/icons/caret-down@2x.png',
    'resources/images/icons/interoperability.png',
    'resources/images/icons/interoperability@2x.png',
    'resources/images/icons/architecture.png',
    'resources/images/icons/architecture@2x.png',
    'resources/images/icons/redundancy.png',
    'resources/images/icons/redundancy@2x.png',
    'resources/images/icons/model.png',
    'resources/images/icons/model@2x.png',
    'resources/images/icons/environment.png',
    'resources/images/icons/environment@2x.png',
    'resources/images/icons/model.png',
    'resources/images/icons/model@2x.png',
    'resources/images/icons/interface.png',
    'resources/images/icons/interface@2x.png',
    'resources/images/icons/hierarchy.png',
    'resources/images/icons/hierarchy@2x.png',
    'resources/images/icons/apple.png',
    'resources/images/icons/apple@2x.png',
    'resources/images/icons/debian.png',
    'resources/images/icons/debian@2x.png',
    'resources/images/icons/windows.png',
    'resources/images/icons/windows@2x.png',
    'resources/images/icons/external-link.png',
    'resources/images/icons/external-link@2x.png',
    'resources/images/icons/status-healthy.png',
    'resources/images/icons/status-healthy@2x.png',
    'resources/images/icons/status-problems.png',
    'resources/images/icons/status-problems@2x.png',
    'resources/images/icons/status-down.png',
    'resources/images/icons/status-down@2x.png',
    'resources/images/icons/users.png',
    'resources/images/icons/users@2x.png',
    'resources/images/icons/address-book.png',
    'resources/images/icons/address-book@2x.png',
    'resources/images/icons/monitoring.png',
    'resources/images/icons/monitoring@2x.png',
    'resources/images/icons/priority.png',
    'resources/images/icons/priority@2x.png',
    'resources/images/icons/key.png',
    'resources/images/icons/key@2x.png',
    'resources/images/icons/device-iphone.png',
    'resources/images/icons/device-iphone@2x.png',
    'resources/images/icons/on-premise-hub.png',
    'resources/images/icons/on-premise-hub@2x.png',
    'resources/images/icons/consulting.png',
    'resources/images/icons/consulting@2x.png',
    'resources/images/icons/cluster.png',
    'resources/images/icons/cluster@2x.png',
    'resources/images/icons/quota.png',
    'resources/images/icons/quota@2x.png',
    'resources/images/icons/software.png',
    'resources/images/icons/software@2x.png',
    'resources/images/icons/multipurpose.png',
    'resources/images/icons/multipurpose@2x.png',
    'resources/images/icons/modern.png',
    'resources/images/icons/modern@2x.png',
    'resources/images/icons/healing.png',
    'resources/images/icons/healing@2x.png',
  )

  resources = resources + resources_icons

  if python is not None:
    python_version = python.version
  else:
    python_version = '%s.%s' % sys.version_ivnfo[:2]
  python_prefix = drake.Path('lib/python%s' % python_version)

  def copy_sources(where, how = drake.copy):
    where = drake.Path(where) / python_prefix
    for node in how(sources,
                    where / 'infinit/website', strip_prefix = 'src'):
      yield node
    for node in how(dependencies,
                    where, strip_prefix = 'src'):
      yield node
    yield how([bottle], where, strip_prefix = True)[0]
    for n in how(sendwithus.nodes,
                 where, strip_prefix = '../%s' % sendwithus.root):
      yield n
  def copy_templates(where, how = drake.copy):
    where = drake.Path(where)
    for node in how(templates, where / 'share/infinit/website'):
      yield node
    for node in how(resources, where / 'share/infinit/website'):
      yield node

  build = drake.Rule('build')
  build << copy_sources(where = '.', how = copy_python)
  build << copy_templates(where = '.', how = drake.copy)
  install = drake.Rule('install')
  install << copy_sources(
    where = prefix,
    how = functools.partial(drake.copy, builder = PatchAndInstall))
  install << copy_templates(where = prefix, how = drake.install)

  ## ------ ##
  ## Debian ##
  ## ------ ##

  git = drake.git.Git()
  with drake.templating.Context(content = {
      'version': git.description(),
      'version_major': git.version().split('.')[0],
      'version_minor': git.version().split('.')[1],
      'python_version_major': python.version.major,
      'python_version_minor': python.version.minor,
  }):
    drake.node('control.tmpl')
  package = chain(copy_sources('debian/opt/infinit/sh'),
                  copy_templates('debian/opt/infinit/sh'),
                  drake.copy(drake.nodes('control'), 'debian/DEBIAN'))
  debian = drake.Rule('debian')
  debian << drake.debian.Packager(
    'infinit-sh_%s_amd64.deb' % git.description(),
    package, 'debian').package

stages:
  - build

variables:
  PYTHONUNBUFFERED: "1"
  LC_ALL: "C.UTF-8"

x86_64-centos6-gcc4:
  stage: build
  script:
    - export LC_ALL=en_US.utf8
    - git submodule sync
    - git submodule update --init --recursive
    - git fetch origin --tags
    - mkdir -p ../fs-build ../fs-install
    - scl enable devtoolset-4 rh-python34 "farm/configure --arch x86_64 --os centos6 --compiler gcc4 --project Filesystem --source-dir . --build-dir ../fs-build --install-dir ../fs-install"
    - cd ../fs-build && scl enable devtoolset-4 rh-python34 "python3 drake --website=false --beyond=false -j $(nproc) //build"
    - cd ../fs-build && scl enable devtoolset-4 rh-python34 "python3 drake --website=false --beyond=false -j $(nproc) //check"
    - cd ../fs-build && scl enable devtoolset-4 rh-python34 "python3 drake --website=false --beyond=false -j $(nproc) //install"
    - cd ../fs-build && scl enable devtoolset-4 rh-python34 "python3 drake --website=false --beyond=false -j $(nproc) //redhat"
    - scp ../fs-build/infinit-$(GIT_DIR=../fs/.git git describe | sed -e 's:-:_:g' )-1.el6.x86_64.rpm buildslave@packages.infinit.sh:tmp
    - cd ../fs-build && scl enable devtoolset-4 rh-python34 "python3 drake --website=false --beyond=false -j $(nproc) //debian-debug"
    - if GIT_DIR=../fs/.git git describe --exact-match HEAD; then scp ../fs-build/infinit-debug-symbols-centos-$(GIT_DIR=../fs/.git git describe)_0_amd64.deb buildslave@packages.infinit.sh:debian; fi
    - if GIT_DIR=../fs/.git git describe --exact-match HEAD; then ssh buildslave@packages.infinit.sh 'make debian'; fi
  tags:
    - x86_64
    - centos6
    - gcc4
  except:
    - feature/website

x86_64-ubuntu-gcc4:
  stage: build
  script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - git fetch origin --tags
    - mkdir -p ../fs-build ../fs-install
    - farm/configure --arch x86_64 --os trusty --compiler gcc4 --project Filesystem --source-dir . --build-dir ../fs-build --install-dir ../fs-install
    - cd ../fs-build
    - python3 drake --website=false -j $(nproc) //build //beyond/build
    - python3 drake --website=false -j $(($(nproc) / 4)) //check //beyond/check
    - python3 drake --website=false -j $(nproc) //install //beyond/install
    - python3 drake -j $(nproc) //beyond/debian
    - scp beyond/infinit-beyond_$(GIT_DIR=../fs/.git git describe)_amd64.deb buildslave@packages.infinit.sh:debian
    - ssh buildslave@packages.infinit.sh 'make debian'
    - python3 drake --website=false //docker
    - docker tag infinit:$(GIT_DIR=../fs/.git git describe) mefyl/infinit:$(GIT_DIR=../fs/.git git describe)
    - docker push mefyl/infinit:$(GIT_DIR=../fs/.git git describe)
    - python3 drake --website=false //beyond/docker
    - docker tag infinit-beyond:$(GIT_DIR=../fs/.git git describe) mefyl/infinit-beyond:$(GIT_DIR=../fs/.git git describe)
    - docker push mefyl/infinit-beyond:$(GIT_DIR=../fs/.git git describe)
  tags:
    - x86_64
    - ubuntu
    - gcc4
  except:
    - feature/website

x86_64-jessie-gcc4:
  stage: build
  script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - git fetch origin --tags
    - BUILD_DIR=_build
    - INSTALL_DIR=_instal
    - DESC=$(git describe)
    - mkdir -p "$BUILD_DIR" "$INSTALL_DIR"
    - farm/configure --arch x86_64 --os jessie --compiler gcc4 --project Filesystem --source-dir . --build-dir "$BUILD_DIR" --install-dir "$INSTALL_DIR"
    - cd "$BUILD_DIR"
    - python3 drake --website=false --beyond=false -j $(nproc) //build
    - python3 drake --website=false --beyond=false -j $(nproc) //check
    - python3 drake --website=false --beyond=false -j $(nproc) //install
    - python3 drake --website=false --beyond=false -j $(nproc) //debian
    - scp "infinit_${DESC}_amd64.deb" buildslave@packages.infinit.sh:debian
    - if GIT_DIR=../.git git describe --exact-match HEAD; then scp "infinit-debug-symbols-debian-${DESC}_0_amd64.deb" buildslave@packages.infinit.sh:debian; fi
    - ssh buildslave@packages.infinit.sh 'make debian'
  tags:
    - x86_64
    - jessie
    - gcc4
  except:
    - feature/website
  cache:
    paths:
      - _build
    key: "$CI_BUILD_NAME/$CI_BUILD_REF_NAME"

x86_64-windows-mingw4:
  stage: build
  script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - git fetch origin --tags
    - mkdir -p ../fs-build ../fs-install
    - farm/configure --arch x86_64 --os windows --compiler mingw4 --project Filesystem --source-dir . --build-dir ../fs-build --install-dir ../fs-install
    - cd ../fs-build && python3 drake --website=false -j $(nproc) //build
    - cd ../fs-build && WINEDEBUG=-all python3 drake --website=false -j $(($(nproc) / 4)) //check
    - rm -rf ../fs-install && mkdir -p ../fs-install
    - python3 drake -j $(nproc) //install
    - mv ../fs-install "../infinit-$(GIT_DIR=../fs/.git git describe)"
    - cd .. && zip -r "infinit-$(GIT_DIR=fs/.git git describe).zip" "infinit-$(GIT_DIR=fs/.git git describe)" && cd fs-build
    - mv "../infinit-$(GIT_DIR=../fs/.git git describe)" ../fs-install
    - scp "../infinit-$(GIT_DIR=../fs/.git git describe).zip" buildslave@packages.infinit.sh:tmp
  tags:
    - x86_64
    - windows
    - mingw4
  except:
    - feature/website

x86_64-osx-clang:
  stage: build
  script:
    - export LC_ALL=en_US.UTF-8
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - git fetch origin --tags
    - mkdir -p ../fs-build
    - farm/configure --arch x86_64 --os osx --compiler clang --project Filesystem --source-dir . --build-dir ../fs-build --install-dir ../fs-install
    - cd ../fs-build
    - python3 drake -j 4 //build
    - python3 drake -j 4 //check
    - python3 drake -j 4 //beyond/check
    - rm -rf ../fs-install && mkdir -p ../fs-install
    - python3 drake -j 4 //install
    - TARBALL=infinit-x86_64-osx-clang3-$(GIT_DIR=../fs/.git git describe).tbz
    - gtar -cvjf /tmp/$TARBALL -C ../fs-install . --show-transformed-names --transform "s,^\\./,infinit-$(GIT_DIR=../fs/.git git describe)/,"
    - scp /tmp/$TARBALL buildslave@packages.infinit.sh:tmp
    - ssh debian@debian.infinit.io 'make brew'
    - python3 drake -j 4 //debian-debug
    - if GIT_DIR=../fs/.git git describe --exact-match HEAD; then scp ../fs-build/infinit-debug-symbols-macosx-$(GIT_DIR=../fs/.git git describe)_0_amd64.deb buildslave@packages.infinit.sh:debian; fi
    - if GIT_DIR=../fs/.git git describe --exact-match HEAD; then ssh buildslave@packages.infinit.sh 'make debian'; fi
  tags:
    - x86_64
    - osx
    - clang
  except:
    - feature/website

website:
  stage: build
  script:
    - git submodule sync --recursive
    - pip3 install mistune
    - git submodule update --init --recursive
    - git fetch origin --tags
    - mkdir -p ../fs-build ../fs-website
    - farm/configure --arch x86_64 --os trusty --compiler gcc4 --project Filesystem --source-dir . --build-dir ../fs-build --install-dir ../fs-install
    - cd ../fs-build && python3 drake -j $(nproc) //website/build
    - cd ../fs-build && python3 drake -j $(nproc) //website/install --prefix=$(realpath ../fs-website)
    - cd ../fs-build && python3 drake -j $(nproc) //website/debian
    - scp ../fs-build/website/infinit-sh_$(GIT_DIR=../fs/.git git describe)_amd64.deb buildslave@packages.infinit.sh:debian
    - ssh buildslave@packages.infinit.sh 'make debian'
  tags:
    - x86_64
    - trusty
    - gcc4
  only:
    - feature/website

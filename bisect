#!/usr/bin/env python3

import argparse
import multiprocessing
import os.path
import sh
import sys

def parse_args():
    p = argparse.ArgumentParser(description='Track errors.')
    p.add_argument('-b', '--build', default='linux64',
                   help='build type.')
    p.add_argument('-j', '--jobs', type=int,
                   default=multiprocessing.cpu_count(),
                   help='number of parallel jobs')
    p.add_argument('args', nargs='*',
                   help='arguments to pass to drake')
    return p.parse_args()

args = parse_args()
SELF = os.path.realpath(sys.argv[0])
ROOT = os.path.dirname(SELF)
BUILD = '{root}/_build/{build}'.format(root=ROOT,
                                       build=args.build)

def report(msg):
  print(msg, file = sys.stderr)

git = sh.git.bake(_cwd = ROOT)
try:
  git('submodule', 'update', '--init', '--recursive')
except Exception as e:
  print(e, file = sys.stderr)
  report('unable to update submodules, skipping commit')
  exit(125)

drake = sh.Command('python3').bake('%s/drake' % BUILD, _cwd = BUILD)
try:
  drake('-j', args.jobs, *args.args)
except Exception as e:
  report(e)
  exit(1)
